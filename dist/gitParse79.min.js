!function t(e,o,r){function n(i,a){if(!o[i]){if(!e[i]){var d="function"==typeof require&&require;if(!a&&d)return d(i,!0);if(s)return s(i,!0);throw new Error("Cannot find module '"+i+"'")}var c=o[i]={exports:{}};e[i][0].call(c.exports,function(t){var o=e[i][1][t];return n(o?o:t)},c,c.exports,t,e,o,r)}return o[i].exports}for(var s="function"==typeof require&&require,i=0;i<r.length;i++)n(r[i]);return n}({1:[function(t,e,o){e.exports=function(t){var e=this;t=t||function(t){(t=t||function(){})(0,"")},this.git=function(o,r){t(o,function(t,n){e.parse(o,t,n,r)})},this.parse=function(t,o,r,n){var s={code:o,stdout:r,errors:[]};if(r.match(/^fatal\:\ ([\s\S]*)$/g))return s.errors.push(RegExp.$1),void n(s);switch(s.stdout.match(/^git\:\ (\'([\s\S]*?)\'\ is\ not\ a\ git\ command\.)/g)?s.errors.push(RegExp.$1):0!==s.code&&s.errors.push(s.stdout),t[0]){case"init":case"config":case"status":case"add":case"commit":case"branch":case"checkout":case"log":case"show":e[t[0]](t,s,function(t){n(t)});break;default:n(s)}}},e.exports.prototype.init=t("./parsers/init.js"),e.exports.prototype.config=t("./parsers/config.js"),e.exports.prototype.status=t("./parsers/status.js"),e.exports.prototype.add=t("./parsers/add.js"),e.exports.prototype.commit=t("./parsers/commit.js"),e.exports.prototype.branch=t("./parsers/branch.js"),e.exports.prototype.checkout=t("./parsers/checkout.js"),e.exports.prototype.log=t("./parsers/log.js"),e.exports.prototype.show=t("./parsers/show.js"),e.exports.prototype.parseCmdAry=function(t){var e={options:{},args:[]};return t.forEach(function(t,o){if(o){if(t.match(/^\-\-?([a-zA-Z\-\/.]+?)(?:\=([a-zA-Z\-\/.]+))?$/)){var r=RegExp.$1,n=RegExp.$2;return e.options[r]=!0,void(n&&(e.options[r]=n))}e.args.push(t)}}),e}},{"./parsers/add.js":2,"./parsers/branch.js":3,"./parsers/checkout.js":4,"./parsers/commit.js":5,"./parsers/config.js":6,"./parsers/init.js":7,"./parsers/log.js":8,"./parsers/show.js":9,"./parsers/status.js":10}],2:[function(t,e,o){e.exports=function(t,e,o){o=o||function(){};var r=e.stdout.split(/\r\n|\r|\n/g);return e.stdout.length?(e.added=[],e.removed=[],r.forEach(function(t){t.match(/^add\ \'([\s\S]*)\'$/g)?e.added.push(RegExp.$1):t.match(/^remove\ \'([\s\S]*)\'$/g)&&e.removed.push(RegExp.$1)}),void o(e)):void o(e)}},{}],3:[function(t,e,o){e.exports=function(t,e,o){o=o||function(){};var r=e.stdout.split(/\r\n|\r|\n/g);e.branches=[],r.forEach(function(t){if(t.length&&t.match(/^(\*?)[\s]*([\S]*)$/g)){var o=RegExp.$2;e.branches.push(o),RegExp.$1&&(e.currentBranchName=o)}}),o(e)}},{}],4:[function(t,e,o){e.exports=function(t,e,o){o=o||function(){};var r=e.stdout.split(/\r\n|\r|\n/g);e.result=!1,e.created=!1,r.forEach(function(t){if(t.length&&t.match(/^Switched\ to\ (a\ new\ )?branch \'([\S]*?)\'$/g)){var o=RegExp.$2;e.currentBranchName=o,RegExp.$1&&(e.created=!0),e.result=!0}}),o(e)}},{}],5:[function(t,e,o){e.exports=function(t,e,o){(o=o||function(){})(e)}},{}],6:[function(t,e,o){e.exports=function(t,e,o){o=o||function(){};var r=e.stdout.split(/\r\n|\r|\n/g),n=null,s=this.parseCmdAry(t);if(e.property=s.args[0],n=1==s.args.length?"get":"set","get"==n)switch(e.property){case"user.name":e.name=r[0];break;case"user.email":e.email=r[0]}o(e)}},{}],7:[function(t,e,o){e.exports=function(t,e,o){(o=o||function(){})(e)}},{}],8:[function(t,e,o){e.exports=function(t,e,o){o=o||function(){};var r=this,n=e.stdout.split(/\r\n|\r|\n/g),s=null;e.logs=[];var i={},a=[],d=this.parseCmdAry(t);d.options.pretty||d.options.stat||(n.forEach(function(t){return t.match(/^commit\ ([0-9a-fA-F]+)$/)?(i.commit&&a.push(i),i={},i.commit=RegExp.$1,i.stdout=[],i.stdout.push(t),void(s="log_header")):void i.stdout.push(t)}),i.commit&&a.push(i),a.forEach(function(t){var o={};o.code=0,o.stdout=t.stdout.join("\n"),o.errors=[],r.show(["show",t.commit],o,function(t){delete t.code,delete t.stdout,delete t.errors,e.logs.push(t)})})),o(e)}},{}],9:[function(t,e,o){function r(t,e){return e.forEach(function(e){return e.match(/^Author\:\s+([\s\S]+?)\s+\<([\S]+?)\>$/g)?(t.author=RegExp.$1,void(t.email=RegExp.$2)):e.match(/^Date\:\s+([\s\S]+?)$/g)?void(t.date=RegExp.$1):void 0}),t}function n(t){var e=null,o=[],r={};return t.forEach(function(t){if(t.match(/^diff\ \-\-git\ a\/([\s\S]*?) b\/([\s\S]*?)$/))return r.filename&&(o.push(r),r={}),r.filenameBefore=RegExp.$1,r.filename=RegExp.$2,r.type="changed",r.isRenamed=r.filenameBefore!==r.filename,r.similarity=!1,r.index={},void(e="diff_header");if("diff_header"==e){if(t.match(/^new\ file\ mode\ ([0-9]+)$/g))return r.type="added",void(r.mode=RegExp.$1);if(t.match(/^deleted\ file\ mode\ ([0-9]+)$/g))return r.type="deleted",void(r.mode=RegExp.$1);if(t.match(/^similarity\ index\ ([1-9][0-9]*\%)$/g))return void(r.similarity=RegExp.$1);if(t.match(/^index\ ([0-9a-zA-Z]+)\.\.([0-9a-zA-Z]+)(?:\ ([0-9]+))?$/g))return r.index.from=RegExp.$1,r.index.to=RegExp.$2,void(RegExp.$3&&(r.mode=RegExp.$3))}}),r.filename&&(o.push(r),r={}),o}e.exports=function(t,e,o){o=o||function(){};var s,i=e.stdout.split(/\r\n|\r|\n/g),a=null,d=[],c=this.parseCmdAry(t);c.options.pretty||c.options.format||c.options.oneline||c.options["show-notes"]||c.options["no-standard-notes"]||c.options["standard-notes"]||c.options["show-signature"]||i.forEach(function(t){if(t.match(/^commit\ ([0-9a-fA-F]+)$/))return s={},e.commit=RegExp.$1,e.message="",d=[],void(a="log_header");if("log_header"==a)return t.length?void d.push(t):(a="log_commit_message",e=r(e,d),void(d=[]));{if("log_commit_message"!=a)return"log_commit_files"==a?t.length?void d.push(t):(a=null,void(e.files=n(d))):void 0;if(!t.length)return a="log_commit_files",void(d=[]);if(t.match(/^\s{4}([\s\S]*?)$/g))return void(e.message+=RegExp.$1+"\n")}}),o(e)}},{}],10:[function(t,e,o){e.exports=function(t,e,o){o=o||function(){};var r=e.stdout.split(/\r\n|\r|\n/g),n=null;e.staged={},e.staged.untracked=[],e.staged.modified=[],e.staged.deleted=[],e.notStaged={},e.notStaged.untracked=[],e.notStaged.modified=[],e.notStaged.deleted=[],r.forEach(function(t){if(n||t.match(/^On\ branch\ ([\s\S]*)$/g)&&(e.currentBranchName=RegExp.$1),"Untracked files:"==t)return void(n="untracked_files_standby");if("untracked_files_standby"==n){if(!t.length)return void(n="untracked_files")}else if("untracked_files"==n){if(!t.length)return void(n=null);if(t.match(/^[\s]*([\s\S]*?)$/g))return void e.notStaged.untracked.push(RegExp.$1)}if("Changes not staged for commit:"==t)return void(n="changes_not_staged_for_commit_standby");if("changes_not_staged_for_commit_standby"==n){if(!t.length)return void(n="changes_not_staged_for_commit")}else if("changes_not_staged_for_commit"==n){if(!t.length)return void(n=null);if(t.match(/^[\s]*modified\:[\s]+([\s\S]*?)$/g))return void e.notStaged.modified.push(RegExp.$1);if(t.match(/^[\s]*deleted\:[\s]+([\s\S]*?)$/g))return void e.notStaged.deleted.push(RegExp.$1)}if("Changes to be committed:"==t)return void(n="changes_to_be_committed_standby");if("changes_to_be_committed_standby"==n){if(!t.length)return void(n="changes_to_be_committed")}else if("changes_to_be_committed"==n){if(!t.length)return void(n=null);if(t.match(/^[\s]*new\ file\:[\s]+([\s\S]*?)$/g))return void e.staged.untracked.push(RegExp.$1);if(t.match(/^[\s]*modified\:[\s]+([\s\S]*?)$/g))return void e.staged.modified.push(RegExp.$1);if(t.match(/^[\s]*deleted\:[\s]+([\s\S]*?)$/g))return void e.staged.deleted.push(RegExp.$1)}}),o(e)}},{}],11:[function(t,e,o){window.GitParse79=t("../libs/main.js")},{"../libs/main.js":1}]},{},[11]);