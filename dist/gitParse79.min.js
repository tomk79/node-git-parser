!function e(t,o,r){function s(i,a){if(!o[i]){if(!t[i]){var c="function"==typeof require&&require;if(!a&&c)return c(i,!0);if(n)return n(i,!0);throw new Error("Cannot find module '"+i+"'")}var d=o[i]={exports:{}};t[i][0].call(d.exports,function(e){var o=t[i][1][e];return s(o?o:e)},d,d.exports,e,t,o,r)}return o[i].exports}for(var n="function"==typeof require&&require,i=0;i<r.length;i++)s(r[i]);return s}({1:[function(e,t,o){t.exports=function(e){var t=this;e=e||function(e){(e=e||function(){})(0,"")},this.git=function(o,r){e(o,function(e,s){t.parse(o,e,s,r)})},this.parse=function(e,o,r,s){var n={code:o,stdout:r,errors:[]};if(r.match(/^fatal\:\ ([\s\S]*)$/g))return n.errors.push(RegExp.$1),void s(n);switch(n.stdout.match(/^git\:\ (\'([\s\S]*?)\'\ is\ not\ a\ git\ command\.)/g)?n.errors.push(RegExp.$1):0!==n.code&&n.errors.push(n.stdout),e[0]){case"init":case"config":case"status":case"add":case"commit":case"branch":case"checkout":case"log":case"show":case"remote":case"push":t[e[0]](e,n,function(e){s(e)});break;default:s(n)}}},t.exports.prototype.init=e("./parsers/init.js"),t.exports.prototype.config=e("./parsers/config.js"),t.exports.prototype.status=e("./parsers/status.js"),t.exports.prototype.add=e("./parsers/add.js"),t.exports.prototype.commit=e("./parsers/commit.js"),t.exports.prototype.branch=e("./parsers/branch.js"),t.exports.prototype.checkout=e("./parsers/checkout.js"),t.exports.prototype.log=e("./parsers/log.js"),t.exports.prototype.show=e("./parsers/show.js"),t.exports.prototype.remote=e("./parsers/remote.js"),t.exports.prototype.push=e("./parsers/push.js"),t.exports.prototype.parseCmdAry=function(e){var t={options:{},args:[]};return e.forEach(function(e,o){if(o){if(e.match(/^\-\-?([a-zA-Z\-\/.]+?)(?:\=([a-zA-Z\-\/.]+))?$/)){var r=RegExp.$1,s=RegExp.$2;return t.options[r]=!0,void(s&&(t.options[r]=s))}t.args.push(e)}}),t}},{"./parsers/add.js":2,"./parsers/branch.js":3,"./parsers/checkout.js":4,"./parsers/commit.js":5,"./parsers/config.js":6,"./parsers/init.js":7,"./parsers/log.js":8,"./parsers/push.js":9,"./parsers/remote.js":10,"./parsers/show.js":11,"./parsers/status.js":12}],2:[function(e,t,o){t.exports=function(e,t,o){o=o||function(){};var r=t.stdout.split(/\r\n|\r|\n/g);return t.stdout.length?(t.added=[],t.removed=[],r.forEach(function(e){e.match(/^add\ \'([\s\S]*)\'$/g)?t.added.push(RegExp.$1):e.match(/^remove\ \'([\s\S]*)\'$/g)&&t.removed.push(RegExp.$1)}),void o(t)):void o(t)}},{}],3:[function(e,t,o){t.exports=function(e,t,o){o=o||function(){};var r=t.stdout.split(/\r\n|\r|\n/g);t.branches=[],r.forEach(function(e){if(e.length&&e.match(/^(\*?)[\s]*([\S]*)$/g)){var o=RegExp.$2;t.branches.push(o),RegExp.$1&&(t.currentBranchName=o)}}),o(t)}},{}],4:[function(e,t,o){t.exports=function(e,t,o){o=o||function(){};var r=t.stdout.split(/\r\n|\r|\n/g);t.result=!1,t.created=!1,r.forEach(function(e){if(e.length&&e.match(/^Switched\ to\ (a\ new\ )?branch \'([\S]*?)\'$/g)){var o=RegExp.$2;t.currentBranchName=o,RegExp.$1&&(t.created=!0),t.result=!0}}),o(t)}},{}],5:[function(e,t,o){t.exports=function(e,t,o){(o=o||function(){})(t)}},{}],6:[function(e,t,o){t.exports=function(e,t,o){o=o||function(){};var r=t.stdout.split(/\r\n|\r|\n/g),s=null,n=this.parseCmdAry(e);if(t.property=n.args[0],s=1==n.args.length?"get":"set","get"==s)switch(t.property){case"user.name":t.name=r[0];break;case"user.email":t.email=r[0]}o(t)}},{}],7:[function(e,t,o){t.exports=function(e,t,o){(o=o||function(){})(t)}},{}],8:[function(e,t,o){t.exports=function(e,t,o){o=o||function(){};var r=this,s=t.stdout.split(/\r\n|\r|\n/g),n=null;t.logs=[];var i={},a=[],c=this.parseCmdAry(e);c.options.pretty||c.options.stat||(s.forEach(function(e){return e.match(/^commit\ ([0-9a-fA-F]+)$/)?(i.commit&&a.push(i),i={},i.commit=RegExp.$1,i.stdout=[],i.stdout.push(e),void(n="log_header")):void i.stdout.push(e)}),i.commit&&a.push(i),a.forEach(function(e){var o={};o.code=0,o.stdout=e.stdout.join("\n"),o.errors=[],r.show(["show",e.commit],o,function(e){delete e.code,delete e.stdout,delete e.errors,t.logs.push(e)})})),o(t)}},{}],9:[function(e,t,o){t.exports=function(e,t,o){o=o||function(){};var r=t.stdout.split(/\r\n|\r|\n/g);t.remotes={};var s;r.forEach(function(e){return e.match(/^To ([^\s]+)$/)?(s=RegExp.$1,void(t.remotes[s]||(t.remotes[s]=[]))):e.match(/^ \* \[new branch\]\s+([^\s]+) \-\> ([^\s]+)$/)?void t.remotes[s].push({affect:"added",branchNameFrom:RegExp.$1,remoteBranchName:RegExp.$2}):e.match(/^   ([^\s]+)\.\.([^\s]+)\s+([^\s]+) \-\> ([^\s]+)$/)?void t.remotes[s].push({affect:"updated",commitFrom:RegExp.$1,commit:RegExp.$2,branchNameFrom:RegExp.$3,remoteBranchName:RegExp.$4}):e.match(/^ \- \[deleted\]\s+([^\s]+)$/)?void t.remotes[s].push({affect:"deleted",remoteBranchName:RegExp.$1}):void 0}),o(t)}},{}],10:[function(e,t,o){t.exports=function(e,t,o){o=o||function(){};var r=t.stdout.split(/\r\n|\r|\n/g),s=this.parseCmdAry(e);if(1==e.length&&"remote"==e[0]){var n={};r.forEach(function(e){if(e.length){var t={};t.name=e,n[e]||(n[e]=t)}}),t.remotes=n}else if(2==e.length&&s.options.v){var n={};r.forEach(function(e){if(e.length){if(!e.match(/^([^\s]+)\t([^\s]*)\ \(([^\s]+)\)$/))return void t.errors.push("Failed to parse row: "+e);var o=RegExp.$1,r=RegExp.$2,s=RegExp.$3;n[o]||(n[o]={}),n[o].name=o,n[o][s]=r}}),t.remotes=n}else"add"==e[1];o(t)}},{}],11:[function(e,t,o){function r(e,t){return t.forEach(function(t){return t.match(/^Author\:\s+([\s\S]+?)\s+\<([\S]+?)\>$/g)?(e.author=RegExp.$1,void(e.email=RegExp.$2)):t.match(/^Date\:\s+([\s\S]+?)$/g)?void(e.date=RegExp.$1):void 0}),e}function s(e){var t=null,o=[],r={};return e.forEach(function(e){if(e.match(/^diff\ \-\-git\ a\/([\s\S]*?) b\/([\s\S]*?)$/))return r.filename&&(o.push(r),r={}),r.filenameBefore=RegExp.$1,r.filename=RegExp.$2,r.type="changed",r.isRenamed=r.filenameBefore!==r.filename,r.similarity=!1,r.index={},void(t="diff_header");if("diff_header"==t){if(e.match(/^new\ file\ mode\ ([0-9]+)$/g))return r.type="added",void(r.mode=RegExp.$1);if(e.match(/^deleted\ file\ mode\ ([0-9]+)$/g))return r.type="deleted",void(r.mode=RegExp.$1);if(e.match(/^similarity\ index\ ([1-9][0-9]*\%)$/g))return void(r.similarity=RegExp.$1);if(e.match(/^index\ ([0-9a-zA-Z]+)\.\.([0-9a-zA-Z]+)(?:\ ([0-9]+))?$/g))return r.index.from=RegExp.$1,r.index.to=RegExp.$2,void(RegExp.$3&&(r.mode=RegExp.$3))}}),r.filename&&(o.push(r),r={}),o}t.exports=function(e,t,o){o=o||function(){};var n,i=t.stdout.split(/\r\n|\r|\n/g),a=null,c=[],d=this.parseCmdAry(e);d.options.pretty||d.options.format||d.options.oneline||d.options["show-notes"]||d.options["no-standard-notes"]||d.options["standard-notes"]||d.options["show-signature"]||i.forEach(function(e){if(e.match(/^commit\ ([0-9a-fA-F]+)$/))return n={},t.commit=RegExp.$1,t.message="",c=[],void(a="log_header");if("log_header"==a)return e.length?void c.push(e):(a="log_commit_message",t=r(t,c),void(c=[]));{if("log_commit_message"!=a)return"log_commit_files"==a?e.length?void c.push(e):(a=null,void(t.files=s(c))):void 0;if(!e.length)return a="log_commit_files",void(c=[]);if(e.match(/^\s{4}([\s\S]*?)$/g))return void(t.message+=RegExp.$1+"\n")}}),o(t)}},{}],12:[function(e,t,o){t.exports=function(e,t,o){o=o||function(){};var r=t.stdout.split(/\r\n|\r|\n/g),s=null;t.staged={},t.staged.untracked=[],t.staged.modified=[],t.staged.deleted=[],t.notStaged={},t.notStaged.untracked=[],t.notStaged.modified=[],t.notStaged.deleted=[],r.forEach(function(e){if(s||e.match(/^On\ branch\ ([\s\S]*)$/g)&&(t.currentBranchName=RegExp.$1),"Untracked files:"==e)return void(s="untracked_files_standby");if("untracked_files_standby"==s){if(!e.length)return void(s="untracked_files")}else if("untracked_files"==s){if(!e.length)return void(s=null);if(e.match(/^[\s]*([\s\S]*?)$/g))return void t.notStaged.untracked.push(RegExp.$1)}if("Changes not staged for commit:"==e)return void(s="changes_not_staged_for_commit_standby");if("changes_not_staged_for_commit_standby"==s){if(!e.length)return void(s="changes_not_staged_for_commit")}else if("changes_not_staged_for_commit"==s){if(!e.length)return void(s=null);if(e.match(/^[\s]*modified\:[\s]+([\s\S]*?)$/g))return void t.notStaged.modified.push(RegExp.$1);if(e.match(/^[\s]*deleted\:[\s]+([\s\S]*?)$/g))return void t.notStaged.deleted.push(RegExp.$1)}if("Changes to be committed:"==e)return void(s="changes_to_be_committed_standby");if("changes_to_be_committed_standby"==s){if(!e.length)return void(s="changes_to_be_committed")}else if("changes_to_be_committed"==s){if(!e.length)return void(s=null);if(e.match(/^[\s]*new\ file\:[\s]+([\s\S]*?)$/g))return void t.staged.untracked.push(RegExp.$1);if(e.match(/^[\s]*modified\:[\s]+([\s\S]*?)$/g))return void t.staged.modified.push(RegExp.$1);if(e.match(/^[\s]*deleted\:[\s]+([\s\S]*?)$/g))return void t.staged.deleted.push(RegExp.$1)}}),o(t)}},{}],13:[function(e,t,o){window.GitParse79=e("../libs/main.js")},{"../libs/main.js":1}]},{},[13]);